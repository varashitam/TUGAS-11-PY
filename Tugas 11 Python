{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Pertemuan 11_images classcification.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/varashitam/TUGAS-11-PY/blob/main/Tugas%2011%20Python\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BdZS-etrxQ1v",
        "outputId": "0aae3b02-d690-4095-9478-b59d368c5277"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W-S3m8NwxU1R",
        "outputId": "dbf40dd7-9b0c-4c3b-d351-901fb8001739"
      },
      "source": [
        "cd /content/drive/MyDrive/Colab Notebooks"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/drive/MyDrive/Colab Notebooks\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x5bT2B9Rxp2V",
        "outputId": "16816f79-dcab-409a-b10b-d30d12be57db"
      },
      "source": [
        "ls"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[0m\u001b[01;34mdataset\u001b[0m/  Untitled0.ipynb\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hkZrpw2Fxrud"
      },
      "source": [
        "# import the necessary packages\n",
        "from keras.models import Sequential\n",
        "from keras.layers.core import Activation\n",
        "from keras.layers.core import Flatten\n",
        "from keras.layers.core import Dense\n",
        "from keras.optimizers import Adam\n",
        "from sklearn.preprocessing import LabelBinarizer\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import classification_report\n",
        "from PIL import Image\n",
        "from imutils import paths\n",
        "import numpy as np\n",
        "import os"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l_3Ck5xsxxGd",
        "outputId": "97443c3e-55ed-4667-9c9c-e80522bf7791"
      },
      "source": [
        "# grab all image paths in the input dataset directory, then initialize\n",
        "# our list of images and corresponding class labels\n",
        "print(\"[INFO] loading images...\")\n",
        "imagePaths = paths.list_images(\"dataset\")\n",
        "data = []\n",
        "labels = []"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[INFO] loading images...\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yT_K-N_V1ECs"
      },
      "source": [
        "for imagePath in imagePaths:\n",
        "  # load the input image from disk, resize it to 64x64 pixels, scale\n",
        "  # the pixel intensities to the range [0, 1], and then update our\n",
        "  # image list\n",
        "  image = Image.open(imagePath)\n",
        "  # prepocessing\n",
        "  image = np.array(image.resize((64, 64))) / 255.0\n",
        "  data.append(image)\n",
        "  # extract the class label from the file path and update the\n",
        "  #label list\n",
        "  label = imagePath.split(os.path.sep)[-2]\n",
        "  labels.append(label)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YHpInFIJ1Iq4",
        "outputId": "53171122-255b-4d35-ce75-cdbc8c661d58"
      },
      "source": [
        "print(labels)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rCSvsAFc1Oaf"
      },
      "source": [
        "# encode the labes, converting them from strings to integers\n",
        "lb = LabelBinarizer()\n",
        "labels = lb.fit_transform(labels)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bBrjg89h1e1O",
        "outputId": "badbd0e8-d83d-4da2-d944-46089bc9011b"
      },
      "source": [
        "print(labels)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[1 0 0 0 0]\n",
            " [1 0 0 0 0]\n",
            " [1 0 0 0 0]\n",
            " ...\n",
            " [0 0 0 0 1]\n",
            " [0 0 0 0 1]\n",
            " [0 0 0 0 1]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GShYWCIN1j1W",
        "outputId": "bf8b0da0-30a1-4996-e52f-09f14ce6e910"
      },
      "source": [
        "# perform a training and testing split, using 76% of the data for\n",
        "# training and 24% for evaluation\n",
        "(trainX, testX, trainY, testY) = train_test_split(np.array(data),\tnp.array(labels), test_size=0.24, shuffle=True)\n",
        "print(trainX.shape)\n",
        "print(testX.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(443, 64, 64, 3)\n",
            "(141, 64, 64, 3)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HiByg-Sy2Fh4",
        "outputId": "ebd6c188-4948-4829-c2de-5b16ff9cf7da"
      },
      "source": [
        "from keras.layers import Convolution2D, MaxPool2D\n",
        "from keras.models import Sequential\n",
        "from keras.layers.core import Flatten, Dense\n",
        "\n",
        "model1 = Sequential()\n",
        "model1.add(Convolution2D(8,(3,3), activation='relu', input_shape=(64,64,3)))\n",
        "model1.add(MaxPool2D(2,2))\n",
        "model1.add(Convolution2D(16,(3,3), activation='relu'))\n",
        "model1.add(MaxPool2D(2,2))\n",
        "# fully connected layers\n",
        "model1.add(Flatten())\n",
        "model1.add(Dense(100, activation='relu'))\n",
        "model1.add(Dense(5, activation='softmax'))\n",
        "\n",
        "model1.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "conv2d_2 (Conv2D)            (None, 62, 62, 8)         224       \n",
            "_________________________________________________________________\n",
            "max_pooling2d_2 (MaxPooling2 (None, 31, 31, 8)         0         \n",
            "_________________________________________________________________\n",
            "conv2d_3 (Conv2D)            (None, 29, 29, 16)        1168      \n",
            "_________________________________________________________________\n",
            "max_pooling2d_3 (MaxPooling2 (None, 14, 14, 16)        0         \n",
            "_________________________________________________________________\n",
            "flatten_1 (Flatten)          (None, 3136)              0         \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 100)               313700    \n",
            "_________________________________________________________________\n",
            "dense_3 (Dense)              (None, 5)                 505       \n",
            "=================================================================\n",
            "Total params: 315,597\n",
            "Trainable params: 315,597\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4rs3Dp5v2Hx2"
      },
      "source": [
        "from keras.models import Sequential\n",
        "from keras.layers.core import Flatten\n",
        "from keras.layers.core import Dense\n",
        "\n",
        "model = Sequential(\n",
        "    [\n",
        "     Flatten(input_shape=(64*64*3,)),\n",
        "     Dense(100, activation=\"relu\", name=\"layer1\"),\n",
        "     Dense(16, activation=\"relu\", name=\"layer2\"),\n",
        "     Dense(16, activation=\"relu\", name=\"layer3\"),\n",
        "     Dense(3, activation=\"softmax\", name=\"layer4\"),\n",
        "    ]\n",
        ")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CAZyTa1f2PeV"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i_LJa1ti2aOu",
        "outputId": "7377df9c-d6e8-4b23-f6a4-8d15a66c6426"
      },
      "source": [
        "# train the model using the Adam optimizer\n",
        "print(\"[INFO] training network...\")\n",
        "opt = Adam(lr=1e-3, decay=1e-3 / 50)\n",
        "model1.compile(loss=\"categorical_crossentropy\", optimizer=opt, metrics=[\"accuracy\"])\n",
        "H = model1.fit(trainX, trainY, validation_data=(testX, testY), epochs=30, batch_size=32)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[INFO] training network...\n",
            "Epoch 1/30\n",
            "14/14 [==============================] - 1s 78ms/step - loss: 1.0508 - accuracy: 0.5982 - val_loss: 0.9654 - val_accuracy: 0.5532\n",
            "Epoch 2/30\n",
            "14/14 [==============================] - 1s 66ms/step - loss: 0.7632 - accuracy: 0.7269 - val_loss: 0.8772 - val_accuracy: 0.6383\n",
            "Epoch 3/30\n",
            "14/14 [==============================] - 1s 68ms/step - loss: 0.6686 - accuracy: 0.7720 - val_loss: 0.7599 - val_accuracy: 0.7092\n",
            "Epoch 4/30\n",
            "14/14 [==============================] - 1s 69ms/step - loss: 0.6034 - accuracy: 0.7878 - val_loss: 0.7019 - val_accuracy: 0.7305\n",
            "Epoch 5/30\n",
            "14/14 [==============================] - 1s 68ms/step - loss: 0.5466 - accuracy: 0.8172 - val_loss: 0.8126 - val_accuracy: 0.6454\n",
            "Epoch 6/30\n",
            "14/14 [==============================] - 1s 67ms/step - loss: 0.5457 - accuracy: 0.7743 - val_loss: 0.8613 - val_accuracy: 0.5957\n",
            "Epoch 7/30\n",
            "14/14 [==============================] - 1s 67ms/step - loss: 0.5213 - accuracy: 0.8081 - val_loss: 0.6828 - val_accuracy: 0.7234\n",
            "Epoch 8/30\n",
            "14/14 [==============================] - 1s 66ms/step - loss: 0.4779 - accuracy: 0.8262 - val_loss: 0.5439 - val_accuracy: 0.8014\n",
            "Epoch 9/30\n",
            "14/14 [==============================] - 1s 67ms/step - loss: 0.4041 - accuracy: 0.8668 - val_loss: 0.5293 - val_accuracy: 0.8085\n",
            "Epoch 10/30\n",
            "14/14 [==============================] - 1s 68ms/step - loss: 0.3734 - accuracy: 0.8713 - val_loss: 0.6285 - val_accuracy: 0.7021\n",
            "Epoch 11/30\n",
            "14/14 [==============================] - 1s 69ms/step - loss: 0.4016 - accuracy: 0.8510 - val_loss: 0.5621 - val_accuracy: 0.7872\n",
            "Epoch 12/30\n",
            "14/14 [==============================] - 1s 68ms/step - loss: 0.3745 - accuracy: 0.8668 - val_loss: 0.4739 - val_accuracy: 0.8369\n",
            "Epoch 13/30\n",
            "14/14 [==============================] - 1s 70ms/step - loss: 0.2961 - accuracy: 0.9029 - val_loss: 0.4655 - val_accuracy: 0.8369\n",
            "Epoch 14/30\n",
            "14/14 [==============================] - 1s 71ms/step - loss: 0.2600 - accuracy: 0.9210 - val_loss: 0.4652 - val_accuracy: 0.8156\n",
            "Epoch 15/30\n",
            "14/14 [==============================] - 1s 71ms/step - loss: 0.2446 - accuracy: 0.9345 - val_loss: 0.4253 - val_accuracy: 0.8369\n",
            "Epoch 16/30\n",
            "14/14 [==============================] - 1s 70ms/step - loss: 0.2291 - accuracy: 0.9368 - val_loss: 0.4309 - val_accuracy: 0.8298\n",
            "Epoch 17/30\n",
            "14/14 [==============================] - 1s 69ms/step - loss: 0.2228 - accuracy: 0.9323 - val_loss: 0.4605 - val_accuracy: 0.8156\n",
            "Epoch 18/30\n",
            "14/14 [==============================] - 1s 69ms/step - loss: 0.2447 - accuracy: 0.9120 - val_loss: 0.5279 - val_accuracy: 0.7872\n",
            "Epoch 19/30\n",
            "14/14 [==============================] - 1s 70ms/step - loss: 0.2509 - accuracy: 0.9255 - val_loss: 0.4211 - val_accuracy: 0.8440\n",
            "Epoch 20/30\n",
            "14/14 [==============================] - 1s 72ms/step - loss: 0.1899 - accuracy: 0.9368 - val_loss: 0.4122 - val_accuracy: 0.8582\n",
            "Epoch 21/30\n",
            "14/14 [==============================] - 1s 70ms/step - loss: 0.1559 - accuracy: 0.9707 - val_loss: 0.5934 - val_accuracy: 0.7660\n",
            "Epoch 22/30\n",
            "14/14 [==============================] - 1s 71ms/step - loss: 0.1585 - accuracy: 0.9661 - val_loss: 0.4005 - val_accuracy: 0.8723\n",
            "Epoch 23/30\n",
            "14/14 [==============================] - 1s 66ms/step - loss: 0.1574 - accuracy: 0.9616 - val_loss: 0.4237 - val_accuracy: 0.8298\n",
            "Epoch 24/30\n",
            "14/14 [==============================] - 1s 69ms/step - loss: 0.1212 - accuracy: 0.9729 - val_loss: 0.3540 - val_accuracy: 0.8582\n",
            "Epoch 25/30\n",
            "14/14 [==============================] - 1s 67ms/step - loss: 0.1188 - accuracy: 0.9819 - val_loss: 0.4478 - val_accuracy: 0.8298\n",
            "Epoch 26/30\n",
            "14/14 [==============================] - 1s 64ms/step - loss: 0.1019 - accuracy: 0.9774 - val_loss: 0.3673 - val_accuracy: 0.8865\n",
            "Epoch 27/30\n",
            "14/14 [==============================] - 1s 65ms/step - loss: 0.0954 - accuracy: 0.9774 - val_loss: 0.3637 - val_accuracy: 0.8723\n",
            "Epoch 28/30\n",
            "14/14 [==============================] - 1s 66ms/step - loss: 0.0904 - accuracy: 0.9797 - val_loss: 0.3792 - val_accuracy: 0.8652\n",
            "Epoch 29/30\n",
            "14/14 [==============================] - 1s 64ms/step - loss: 0.1270 - accuracy: 0.9616 - val_loss: 0.4509 - val_accuracy: 0.8156\n",
            "Epoch 30/30\n",
            "14/14 [==============================] - 1s 66ms/step - loss: 0.1165 - accuracy: 0.9639 - val_loss: 0.4028 - val_accuracy: 0.8511\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 590
        },
        "id": "bDSfQ91F4leJ",
        "outputId": "0dcacf45-997e-4b13-c7a0-064955989b3c"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "print(H.history.keys())\n",
        "# summarize history for accuracy\n",
        "plt.plot(H.history['accuracy'])\n",
        "plt.plot(H.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "# summarize history for loss\n",
        "plt.plot(H.history['loss'])\n",
        "plt.plot(H.history['val_loss'])\n",
        "plt.title('model loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xUjIHrRj4tTn",
        "outputId": "74622758-2430-483f-fdde-f034d3a34f02"
      },
      "source": [
        "# evaluate the network\n",
        "print(\"[INFO] evaluating network...\")\n",
        "predictions = model1.predict(testX, batch_size=32)\n",
        "print(classification_report(testY.argmax(axis=1), predictions.argmax(axis=1), target_names=lb.classes_))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[INFO] evaluating network...\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "      GMB_01       0.88      0.75      0.81        28\n",
            "      GMB_02       0.69      0.83      0.75        29\n",
            "      GMB_03       0.92      0.86      0.89        28\n",
            "      GMB_04       0.93      0.93      0.93        30\n",
            "      GMB_05       0.88      0.88      0.88        26\n",
            "\n",
            "    accuracy                           0.85       141\n",
            "   macro avg       0.86      0.85      0.85       141\n",
            "weighted avg       0.86      0.85      0.85       141\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hbR-x2-b9t4A",
        "outputId": "4cb7cb53-e9c2-49e8-f192-7a7d9e30c216"
      },
      "source": [
        "model1.save('nmodel_scene')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "This property should not be used in TensorFlow 2.0, as updates are applied automatically.\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "This property should not be used in TensorFlow 2.0, as updates are applied automatically.\n",
            "INFO:tensorflow:Assets written to: nmodel_scene/assets\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gz1oulbu95PN"
      },
      "source": [
        "import cv2\n",
        "import matplotlib.pyplot as plt\n",
        "image1='GMB_05_test.jpg'"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "oqL1qQsZ-UaS",
        "outputId": "9a0832e1-f1df-4cb4-9099-b8d3ac425a42"
      },
      "source": [
        "img_array = cv2.imread(image1)\n",
        "plt.imshow(img_array)\n",
        "plt.show()\n",
        "# print(type(img_array))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zomEoCPG-83m",
        "outputId": "4abf655a-d7b4-42d4-d39d-30cf14b11836"
      },
      "source": [
        "image_testing = Image.open('GMB_05_test.jpg')\n",
        "image_testing = np.array(image_testing.resize((64, 64))) / 255.0\n",
        "image_testing.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(64, 64, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tVvQenQR_D8Q",
        "outputId": "1c4f07e9-501e-489f-ed78-b308dba158d6"
      },
      "source": [
        "image_testing = np.expand_dims(image_testing, axis=0)\n",
        "print(image_testing.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(1, 64, 64, 3)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DRNpihTL_HUe",
        "outputId": "b9cc3f33-d7ef-4f83-e5ff-233f396829b4"
      },
      "source": [
        "output = model1.predict(image_testing, 1)\n",
        "print(output)\n",
        "print(lb.classes_[output.argmax(axis=1)])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[9.8335871e-04 7.6878993e-03 1.8735532e-02 5.3609972e-04 9.7205710e-01]]\n",
            "['GMB_05']\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}